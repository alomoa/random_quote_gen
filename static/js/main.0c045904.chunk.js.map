{"version":3,"sources":["logo.svg","QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["quotes","color","QuoteBox","props","state","quote","newQuote","bind","console","log","document","querySelector","classList","remove","box","body","button","querySelectorAll","randBefore","indexOf","this","rand","Math","floor","random","length","randColor","add","style","forEach","item","backgroundColor","addEventListener","event","setState","id","className","href","icon","faTwitter","faTumblr","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0NAAe,I,0DCSTA,EAAS,CAAC,CAAC,yBAA0B,WAAW,CAAC,+BAAgC,gBAAgB,CAAC,QAAQ,aAE1GC,EAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAsFvDC,E,kDAnFX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,MAAOL,EAAO,IAElB,EAAKM,SAAW,EAAKA,SAASC,KAAd,gBALF,E,gEAQdC,QAAQC,IAAI,W,2CAGZD,QAAQC,IAAI,UACZC,SAASC,cAAc,QAAQC,UAAUC,OAAO,a,iCAKzC,IAAD,OACAC,EAAMJ,SAASC,cAAc,QAC7BI,EAAOL,SAASC,cAAc,QAC9BK,EAASN,SAASO,iBAAiB,UAErCC,EAAYlB,EAAOmB,QAAQC,KAAKhB,MAAMC,OAC1CG,QAAQC,IAAI,gBAAkBS,GAC9B,IAAIG,EAAO,EACX,GACIA,EAAOC,KAAKC,MAAMD,KAAKE,SAAYxB,EAAOyB,cACtCP,IAAeG,GAEvB,IAAMK,EAAYJ,KAAKC,MAAMD,KAAKE,SAAYvB,EAAMwB,QACpDjB,QAAQC,IAAIiB,GACZZ,EAAIF,UAAUe,IAAI,WAClBb,EAAIc,MAAM3B,MAAQA,EAAMyB,GAExBV,EAAOa,SAAQ,SAAAC,GACXA,EAAKF,MAAMG,gBAAkB9B,EAAMyB,MAEvCX,EAAKa,MAAMG,gBAAkB9B,EAAMyB,GAEnChB,SAASC,cAAc,QAAQqB,iBAAiB,iBAAiB,SAACC,GAE9D,EAAKC,SACD,CACI7B,MAAOL,EAAOqB,U,+BAQ1B,OACI,sBAAKc,GAAG,YAAR,UACI,sBAAKC,UAAU,YAAf,UACI,oBAAGD,GAAG,OAAN,cACMf,KAAKhB,MAAMC,MAAM,GADvB,OAGA,oBAAG8B,GAAG,SAAN,cACMf,KAAKhB,MAAMC,MAAM,SAG3B,sBAAK+B,UAAU,UAAf,UACI,mBAAGC,KAAK,IAAR,SACI,wBAAQF,GAAG,cAAX,SACI,cAAC,IAAD,CAAiBG,KAAMC,UAG/B,mBAAGF,KAAK,IAAR,SACI,wBAAQF,GAAG,SAAX,SACI,cAAC,IAAD,CAAiBG,KAAME,UAG/B,wBAAQL,GAAG,YAAYM,QAASrB,KAAKd,SAArC,iC,GAzEGoC,IAAMC,WCDdC,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACC,cAAC,EAAD,OCKUS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAAS+C,eAAe,SAM1BZ,M","file":"static/js/main.0c045904.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTumblr, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\n\r\n\r\n\r\nconst quotes = [[\"Hello, this is a quote\", \"someone\"],[\"Hello, this is another quote\", \"Someone else\"],[\"Hello\",\"Lazy boi\"]]\r\n\r\nconst color = [\"#8C1A1A\", \"#7ac74f\", \"#a1cf6b\", \"#d5d887\" ,\"#e0c879\", \"#e87461\"];\r\n\r\nclass QuoteBox extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            quote: quotes[1]\r\n        }\r\n        this.newQuote = this.newQuote.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"hello\");\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(\"update\");\r\n        document.querySelector(\".box\").classList.remove(\"fadeOut\");\r\n        \r\n    }\r\n\r\n    \r\n    newQuote(){\r\n        const box = document.querySelector(\".box\");\r\n        const body = document.querySelector(\"body\");\r\n        const button = document.querySelectorAll(\"button\");\r\n        \r\n        let randBefore= quotes.indexOf(this.state.quote);\r\n        console.log(\"rand before: \" + randBefore)\r\n        let rand = 0;\r\n        do{\r\n            rand = Math.floor(Math.random() * (quotes.length));\r\n        } while(randBefore === rand)\r\n\r\n        const randColor = Math.floor(Math.random() * (color.length));\r\n        console.log(randColor);\r\n        box.classList.add(\"fadeOut\");\r\n        box.style.color = color[randColor];\r\n\r\n        button.forEach(item => {\r\n            item.style.backgroundColor = color[randColor];\r\n        });\r\n        body.style.backgroundColor = color[randColor];\r\n        \r\n        document.querySelector(\".box\").addEventListener('transitionend', (event) => {\r\n            \r\n            this.setState(\r\n                {\r\n                    quote: quotes[rand]\r\n                }\r\n            );\r\n            \r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"quote-box\">\r\n                <div className=\"box color\">\r\n                    <p id=\"text\">\r\n                        \"{this.state.quote[0]}\"\r\n                    </p>\r\n                    <p id=\"author\">\r\n                        -{this.state.quote[1]}\r\n                    </p>\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <a href=\"#\">\r\n                        <button id=\"tweet-quote\">\r\n                            <FontAwesomeIcon icon={faTwitter} />\r\n                        </button>\r\n                    </a>\r\n                    <a href=\"#\">\r\n                        <button id=\"tumblr\">\r\n                            <FontAwesomeIcon icon={faTumblr} />\r\n                        </button>\r\n                    </a>\r\n                    <button id=\"new-quote\" onClick={this.newQuote}>New Quote</button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\n \r\nexport default QuoteBox;","import logo from './logo.svg';\nimport './App.css';\nimport QuoteBox from './QuoteBox';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <QuoteBox />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}